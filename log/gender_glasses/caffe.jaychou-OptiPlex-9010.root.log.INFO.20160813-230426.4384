Log file created at: 2016/08/13 23:04:26
Running on machine: jaychou-OptiPlex-9010
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0813 23:04:26.353873  4384 caffe.cpp:217] Using GPUs 0
I0813 23:04:26.384060  4384 caffe.cpp:222] GPU 0: GeForce GTX 650 Ti
I0813 23:04:26.513042  4384 solver.cpp:48] Initializing solver from parameters: 
test_iter: 1000
test_interval: 1000
base_lr: 0.01
display: 20
max_iter: 10000
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 2000
snapshot: 10000
snapshot_prefix: "models/gender_glasses/gg_net_train"
solver_mode: GPU
device_id: 0
net: "models/gender_glasses/train_val.prototxt"
train_state {
  level: 0
  stage: ""
}
I0813 23:04:26.513221  4384 solver.cpp:91] Creating training net from net file: models/gender_glasses/train_val.prototxt
I0813 23:04:26.513761  4384 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer data
I0813 23:04:26.513777  4384 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer labels
I0813 23:04:26.513797  4384 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy_gender
I0813 23:04:26.513808  4384 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy_glasses
I0813 23:04:26.513819  4384 net.cpp:322] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy_gender
I0813 23:04:26.513950  4384 net.cpp:58] Initializing net from parameters: 
name: "multi_task"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "/home/jaychou/code/new_caffe/caffe-master/examples/gender_glasses/gender_glasses_train_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "labels"
  type: "Data"
  top: "labels"
  include {
    phase: TRAIN
  }
  data_param {
    source: "/home/jaychou/code/new_caffe/caffe-master/examples/gender_glasses/gender_glasses_train_label_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "slice1"
  type: "Slice"
  bottom: "labels"
  top: "gender"
  top: "glasses"
  slice_param {
    slice_dim: 1
    slice_point: 1
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 20
    pad: 0
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 48
    pad: 0
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0.1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0.1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 80
    pad: 0
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "conv4"
  top: "ip1"
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss1"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "glasses"
  top: "loss1"
  loss_weight: 0.5
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip3"
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss2"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "gender"
  top: "loss2"
  loss_weight: 0.5
}
I0813 23:04:26.514580  4384 layer_factory.hpp:77] Creating layer data
I0813 23:04:26.514948  4384 net.cpp:100] Creating Layer data
I0813 23:04:26.514966  4384 net.cpp:408] data -> data
I0813 23:04:26.516026  4388 db_lmdb.cpp:35] Opened lmdb /home/jaychou/code/new_caffe/caffe-master/examples/gender_glasses/gender_glasses_train_lmdb
I0813 23:04:26.524674  4384 data_layer.cpp:41] output data size: 100,3,100,100
I0813 23:04:26.542191  4384 net.cpp:150] Setting up data
I0813 23:04:26.542243  4384 net.cpp:157] Top shape: 100 3 100 100 (3000000)
I0813 23:04:26.542254  4384 net.cpp:165] Memory required for data: 12000000
I0813 23:04:26.542274  4384 layer_factory.hpp:77] Creating layer labels
I0813 23:04:26.542378  4384 net.cpp:100] Creating Layer labels
I0813 23:04:26.542393  4384 net.cpp:408] labels -> labels
I0813 23:04:26.544631  4390 db_lmdb.cpp:35] Opened lmdb /home/jaychou/code/new_caffe/caffe-master/examples/gender_glasses/gender_glasses_train_label_lmdb
I0813 23:04:26.545670  4384 data_layer.cpp:41] output data size: 100,2,1,1
I0813 23:04:26.545922  4384 net.cpp:150] Setting up labels
I0813 23:04:26.545941  4384 net.cpp:157] Top shape: 100 2 1 1 (200)
I0813 23:04:26.545950  4384 net.cpp:165] Memory required for data: 12000800
I0813 23:04:26.545959  4384 layer_factory.hpp:77] Creating layer slice1
I0813 23:04:26.545981  4384 net.cpp:100] Creating Layer slice1
I0813 23:04:26.545995  4384 net.cpp:434] slice1 <- labels
I0813 23:04:26.546012  4384 net.cpp:408] slice1 -> gender
I0813 23:04:26.546031  4384 net.cpp:408] slice1 -> glasses
I0813 23:04:26.546100  4384 net.cpp:150] Setting up slice1
I0813 23:04:26.546116  4384 net.cpp:157] Top shape: 100 1 1 1 (100)
I0813 23:04:26.546126  4384 net.cpp:157] Top shape: 100 1 1 1 (100)
I0813 23:04:26.546151  4384 net.cpp:165] Memory required for data: 12001600
I0813 23:04:26.546162  4384 layer_factory.hpp:77] Creating layer conv1
I0813 23:04:26.546185  4384 net.cpp:100] Creating Layer conv1
I0813 23:04:26.546195  4384 net.cpp:434] conv1 <- data
I0813 23:04:26.546210  4384 net.cpp:408] conv1 -> conv1
I0813 23:04:26.682708  4384 net.cpp:150] Setting up conv1
I0813 23:04:26.682755  4384 net.cpp:157] Top shape: 100 20 96 96 (18432000)
I0813 23:04:26.682766  4384 net.cpp:165] Memory required for data: 85729600
I0813 23:04:26.682878  4384 layer_factory.hpp:77] Creating layer relu1
I0813 23:04:26.682903  4384 net.cpp:100] Creating Layer relu1
I0813 23:04:26.682914  4384 net.cpp:434] relu1 <- conv1
I0813 23:04:26.682925  4384 net.cpp:395] relu1 -> conv1 (in-place)
I0813 23:04:26.683060  4384 net.cpp:150] Setting up relu1
I0813 23:04:26.683076  4384 net.cpp:157] Top shape: 100 20 96 96 (18432000)
I0813 23:04:26.683085  4384 net.cpp:165] Memory required for data: 159457600
I0813 23:04:26.683121  4384 layer_factory.hpp:77] Creating layer pool1
I0813 23:04:26.683137  4384 net.cpp:100] Creating Layer pool1
I0813 23:04:26.683145  4384 net.cpp:434] pool1 <- conv1
I0813 23:04:26.683156  4384 net.cpp:408] pool1 -> pool1
I0813 23:04:26.683207  4384 net.cpp:150] Setting up pool1
I0813 23:04:26.683220  4384 net.cpp:157] Top shape: 100 20 48 48 (4608000)
I0813 23:04:26.683229  4384 net.cpp:165] Memory required for data: 177889600
I0813 23:04:26.683262  4384 layer_factory.hpp:77] Creating layer conv2
I0813 23:04:26.683280  4384 net.cpp:100] Creating Layer conv2
I0813 23:04:26.683290  4384 net.cpp:434] conv2 <- pool1
I0813 23:04:26.683301  4384 net.cpp:408] conv2 -> conv2
I0813 23:04:26.684600  4384 net.cpp:150] Setting up conv2
I0813 23:04:26.684622  4384 net.cpp:157] Top shape: 100 48 44 44 (9292800)
I0813 23:04:26.684630  4384 net.cpp:165] Memory required for data: 215060800
I0813 23:04:26.684645  4384 layer_factory.hpp:77] Creating layer relu2
I0813 23:04:26.684658  4384 net.cpp:100] Creating Layer relu2
I0813 23:04:26.684666  4384 net.cpp:434] relu2 <- conv2
I0813 23:04:26.684676  4384 net.cpp:395] relu2 -> conv2 (in-place)
I0813 23:04:26.684942  4384 net.cpp:150] Setting up relu2
I0813 23:04:26.684959  4384 net.cpp:157] Top shape: 100 48 44 44 (9292800)
I0813 23:04:26.684968  4384 net.cpp:165] Memory required for data: 252232000
I0813 23:04:26.684978  4384 layer_factory.hpp:77] Creating layer pool2
I0813 23:04:26.684989  4384 net.cpp:100] Creating Layer pool2
I0813 23:04:26.684999  4384 net.cpp:434] pool2 <- conv2
I0813 23:04:26.685009  4384 net.cpp:408] pool2 -> pool2
I0813 23:04:26.685048  4384 net.cpp:150] Setting up pool2
I0813 23:04:26.685062  4384 net.cpp:157] Top shape: 100 48 22 22 (2323200)
I0813 23:04:26.685070  4384 net.cpp:165] Memory required for data: 261524800
I0813 23:04:26.685080  4384 layer_factory.hpp:77] Creating layer conv3
I0813 23:04:26.685092  4384 net.cpp:100] Creating Layer conv3
I0813 23:04:26.685101  4384 net.cpp:434] conv3 <- pool2
I0813 23:04:26.685112  4384 net.cpp:408] conv3 -> conv3
I0813 23:04:26.686264  4384 net.cpp:150] Setting up conv3
I0813 23:04:26.686285  4384 net.cpp:157] Top shape: 100 64 20 20 (2560000)
I0813 23:04:26.686295  4384 net.cpp:165] Memory required for data: 271764800
I0813 23:04:26.686309  4384 layer_factory.hpp:77] Creating layer relu3
I0813 23:04:26.686321  4384 net.cpp:100] Creating Layer relu3
I0813 23:04:26.686332  4384 net.cpp:434] relu3 <- conv3
I0813 23:04:26.686342  4384 net.cpp:395] relu3 -> conv3 (in-place)
I0813 23:04:26.686616  4384 net.cpp:150] Setting up relu3
I0813 23:04:26.686635  4384 net.cpp:157] Top shape: 100 64 20 20 (2560000)
I0813 23:04:26.686642  4384 net.cpp:165] Memory required for data: 282004800
I0813 23:04:26.686651  4384 layer_factory.hpp:77] Creating layer conv4
I0813 23:04:26.686666  4384 net.cpp:100] Creating Layer conv4
I0813 23:04:26.686676  4384 net.cpp:434] conv4 <- conv3
I0813 23:04:26.686686  4384 net.cpp:408] conv4 -> conv4
I0813 23:04:26.687786  4384 net.cpp:150] Setting up conv4
I0813 23:04:26.687805  4384 net.cpp:157] Top shape: 100 80 18 18 (2592000)
I0813 23:04:26.687815  4384 net.cpp:165] Memory required for data: 292372800
I0813 23:04:26.687826  4384 layer_factory.hpp:77] Creating layer relu4
I0813 23:04:26.687837  4384 net.cpp:100] Creating Layer relu4
I0813 23:04:26.687846  4384 net.cpp:434] relu4 <- conv4
I0813 23:04:26.687858  4384 net.cpp:395] relu4 -> conv4 (in-place)
I0813 23:04:26.687983  4384 net.cpp:150] Setting up relu4
I0813 23:04:26.687999  4384 net.cpp:157] Top shape: 100 80 18 18 (2592000)
I0813 23:04:26.688006  4384 net.cpp:165] Memory required for data: 302740800
I0813 23:04:26.688014  4384 layer_factory.hpp:77] Creating layer ip1
I0813 23:04:26.688027  4384 net.cpp:100] Creating Layer ip1
I0813 23:04:26.688035  4384 net.cpp:434] ip1 <- conv4
I0813 23:04:26.688047  4384 net.cpp:408] ip1 -> ip1
I0813 23:04:26.784070  4384 net.cpp:150] Setting up ip1
I0813 23:04:26.784118  4384 net.cpp:157] Top shape: 100 512 (51200)
I0813 23:04:26.784128  4384 net.cpp:165] Memory required for data: 302945600
I0813 23:04:26.784150  4384 layer_factory.hpp:77] Creating layer relu5
I0813 23:04:26.784167  4384 net.cpp:100] Creating Layer relu5
I0813 23:04:26.784176  4384 net.cpp:434] relu5 <- ip1
I0813 23:04:26.784188  4384 net.cpp:395] relu5 -> ip1 (in-place)
I0813 23:04:26.784582  4384 net.cpp:150] Setting up relu5
I0813 23:04:26.784600  4384 net.cpp:157] Top shape: 100 512 (51200)
I0813 23:04:26.784610  4384 net.cpp:165] Memory required for data: 303150400
I0813 23:04:26.784649  4384 layer_factory.hpp:77] Creating layer ip1_relu5_0_split
I0813 23:04:26.784669  4384 net.cpp:100] Creating Layer ip1_relu5_0_split
I0813 23:04:26.784680  4384 net.cpp:434] ip1_relu5_0_split <- ip1
I0813 23:04:26.784690  4384 net.cpp:408] ip1_relu5_0_split -> ip1_relu5_0_split_0
I0813 23:04:26.784703  4384 net.cpp:408] ip1_relu5_0_split -> ip1_relu5_0_split_1
I0813 23:04:26.784745  4384 net.cpp:150] Setting up ip1_relu5_0_split
I0813 23:04:26.784759  4384 net.cpp:157] Top shape: 100 512 (51200)
I0813 23:04:26.784768  4384 net.cpp:157] Top shape: 100 512 (51200)
I0813 23:04:26.784780  4384 net.cpp:165] Memory required for data: 303560000
I0813 23:04:26.784787  4384 layer_factory.hpp:77] Creating layer ip2
I0813 23:04:26.784806  4384 net.cpp:100] Creating Layer ip2
I0813 23:04:26.784816  4384 net.cpp:434] ip2 <- ip1_relu5_0_split_0
I0813 23:04:26.784826  4384 net.cpp:408] ip2 -> ip2
I0813 23:04:26.784926  4384 net.cpp:150] Setting up ip2
I0813 23:04:26.784940  4384 net.cpp:157] Top shape: 100 2 (200)
I0813 23:04:26.784948  4384 net.cpp:165] Memory required for data: 303560800
I0813 23:04:26.784960  4384 layer_factory.hpp:77] Creating layer loss1
I0813 23:04:26.784972  4384 net.cpp:100] Creating Layer loss1
I0813 23:04:26.784981  4384 net.cpp:434] loss1 <- ip2
I0813 23:04:26.784991  4384 net.cpp:434] loss1 <- glasses
I0813 23:04:26.785003  4384 net.cpp:408] loss1 -> loss1
I0813 23:04:26.785020  4384 layer_factory.hpp:77] Creating layer loss1
I0813 23:04:26.785228  4384 net.cpp:150] Setting up loss1
I0813 23:04:26.785244  4384 net.cpp:157] Top shape: (1)
I0813 23:04:26.785254  4384 net.cpp:160]     with loss weight 0.5
I0813 23:04:26.785281  4384 net.cpp:165] Memory required for data: 303560804
I0813 23:04:26.785290  4384 layer_factory.hpp:77] Creating layer ip3
I0813 23:04:26.785301  4384 net.cpp:100] Creating Layer ip3
I0813 23:04:26.785310  4384 net.cpp:434] ip3 <- ip1_relu5_0_split_1
I0813 23:04:26.785323  4384 net.cpp:408] ip3 -> ip3
I0813 23:04:26.787348  4384 net.cpp:150] Setting up ip3
I0813 23:04:26.787366  4384 net.cpp:157] Top shape: 100 512 (51200)
I0813 23:04:26.787375  4384 net.cpp:165] Memory required for data: 303765604
I0813 23:04:26.787387  4384 layer_factory.hpp:77] Creating layer loss2
I0813 23:04:26.787398  4384 net.cpp:100] Creating Layer loss2
I0813 23:04:26.787406  4384 net.cpp:434] loss2 <- ip3
I0813 23:04:26.787416  4384 net.cpp:434] loss2 <- gender
I0813 23:04:26.787434  4384 net.cpp:408] loss2 -> loss2
I0813 23:04:26.787449  4384 layer_factory.hpp:77] Creating layer loss2
I0813 23:04:26.787848  4384 net.cpp:150] Setting up loss2
I0813 23:04:26.787866  4384 net.cpp:157] Top shape: (1)
I0813 23:04:26.787874  4384 net.cpp:160]     with loss weight 0.5
I0813 23:04:26.787886  4384 net.cpp:165] Memory required for data: 303765608
I0813 23:04:26.787895  4384 net.cpp:226] loss2 needs backward computation.
I0813 23:04:26.787904  4384 net.cpp:226] ip3 needs backward computation.
I0813 23:04:26.787912  4384 net.cpp:226] loss1 needs backward computation.
I0813 23:04:26.787920  4384 net.cpp:226] ip2 needs backward computation.
I0813 23:04:26.787930  4384 net.cpp:226] ip1_relu5_0_split needs backward computation.
I0813 23:04:26.787937  4384 net.cpp:226] relu5 needs backward computation.
I0813 23:04:26.787945  4384 net.cpp:226] ip1 needs backward computation.
I0813 23:04:26.787953  4384 net.cpp:226] relu4 needs backward computation.
I0813 23:04:26.787962  4384 net.cpp:226] conv4 needs backward computation.
I0813 23:04:26.787971  4384 net.cpp:226] relu3 needs backward computation.
I0813 23:04:26.787978  4384 net.cpp:226] conv3 needs backward computation.
I0813 23:04:26.787986  4384 net.cpp:226] pool2 needs backward computation.
I0813 23:04:26.787995  4384 net.cpp:226] relu2 needs backward computation.
I0813 23:04:26.788003  4384 net.cpp:226] conv2 needs backward computation.
I0813 23:04:26.788012  4384 net.cpp:226] pool1 needs backward computation.
I0813 23:04:26.788019  4384 net.cpp:226] relu1 needs backward computation.
I0813 23:04:26.788038  4384 net.cpp:226] conv1 needs backward computation.
I0813 23:04:26.788048  4384 net.cpp:228] slice1 does not need backward computation.
I0813 23:04:26.788058  4384 net.cpp:228] labels does not need backward computation.
I0813 23:04:26.788065  4384 net.cpp:228] data does not need backward computation.
I0813 23:04:26.788074  4384 net.cpp:270] This network produces output loss1
I0813 23:04:26.788081  4384 net.cpp:270] This network produces output loss2
I0813 23:04:26.788101  4384 net.cpp:283] Network initialization done.
I0813 23:04:26.788645  4384 solver.cpp:181] Creating test net (#0) specified by net file: models/gender_glasses/train_val.prototxt
I0813 23:04:26.788688  4384 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer data
I0813 23:04:26.788699  4384 net.cpp:322] The NetState phase (1) differed from the phase (0) specified by a rule in layer labels
I0813 23:04:26.788847  4384 net.cpp:58] Initializing net from parameters: 
name: "multi_task"
state {
  phase: TEST
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "/home/jaychou/code/new_caffe/caffe-master/examples/gender_glasses/gender_glasses_val_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "labels"
  type: "Data"
  top: "labels"
  include {
    phase: TEST
  }
  data_param {
    source: "/home/jaychou/code/new_caffe/caffe-master/examples/gender_glasses/gender_glasses_val_label_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "slice1"
  type: "Slice"
  bottom: "labels"
  top: "gender"
  top: "glasses"
  slice_param {
    slice_dim: 1
    slice_point: 1
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 20
    pad: 0
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 48
    pad: 0
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0.1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0.1
  }
  param {
    lr_mult: 0.1
  }
  convolution_param {
    num_output: 80
    pad: 0
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "conv4"
  top: "ip1"
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy_gender"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "gender"
  top: "accuracy_gender"
  include {
    phase: TEST
  }
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss1"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "glasses"
  top: "loss1"
  loss_weight: 0.5
}
layer {
  name: "accuracy_glasses"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "glasses"
  top: "accuracy_glasses"
  include {
    phase: TEST
  }
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip3"
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss2"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "gender"
  top: "loss2"
  loss_weight: 0.5
}
layer {
  name: "accuracy_gender"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "gender"
  top: "accuracy_gender"
  include {
    phase: TEST
  }
}
F0813 23:04:26.789422  4384 insert_splits.cpp:29] Unknown bottom blob 'ip3' (layer 'accuracy_gender', bottom index 0)
